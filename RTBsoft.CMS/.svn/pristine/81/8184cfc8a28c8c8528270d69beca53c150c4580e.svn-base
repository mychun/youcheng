using RTBcms.Common;
using RTBcms.DBUtility;
using RTBcms.Web.Plugin.OnlineService.Model;
using System;
using System.Data;
using System.Data.SqlClient;
using System.Text;
namespace RTBcms.Web.Plugin.OnlineService.DAL
{
	public class online_service
	{
		private string databaseprefix;
        public online_service(string _databaseprefix)
		{
			this.databaseprefix = _databaseprefix;
		}
		public bool Exists(int id)
		{
			StringBuilder strSql = new StringBuilder();
            strSql.Append("select count(1) from " + this.databaseprefix + "online_service");
			strSql.Append(" where id=@id ");
			SqlParameter[] parameters = new SqlParameter[]
			{
				new SqlParameter("@id", SqlDbType.Int, 4)
			};
			parameters[0].Value = id;
			return DbHelperSQL.Exists(strSql.ToString(), parameters);
		}
        public int Add(RTBcms.Web.Plugin.OnlineService.Model.online_service model)
		{
			StringBuilder strSql = new StringBuilder();
            strSql.Append("insert into " + this.databaseprefix + "online_service(");
            strSql.Append("service_template,service_title,sort_id,is_lock,add_time,site_path)");
			strSql.Append(" values (");
            strSql.Append("@service_template,@service_title,@sort_id,@is_lock,@add_time,@site_path)");
			strSql.Append(";select @@IDENTITY");
			SqlParameter[] parameters = new SqlParameter[]
			{
				new SqlParameter("@service_template", SqlDbType.NVarChar, 50),
				new SqlParameter("@service_title", SqlDbType.NVarChar, 50),
				new SqlParameter("@sort_id", SqlDbType.Int, 4),
				new SqlParameter("@is_lock", SqlDbType.TinyInt, 1),
				new SqlParameter("@add_time", SqlDbType.DateTime),
                new SqlParameter("@site_path", SqlDbType.NVarChar, 100),
			};
            parameters[0].Value = model.service_template;
            parameters[1].Value = model.service_title;
            parameters[2].Value = model.sort_id;
			parameters[3].Value = model.is_lock;
			parameters[4].Value = model.add_time;
            parameters[5].Value = model.site_path;
			object obj = DbHelperSQL.GetSingle(strSql.ToString(), parameters);
			int result;
			if (obj == null)
			{
				result = 0;
			}
			else
			{
				result = Convert.ToInt32(obj);
			}
			return result;
		}
		public void UpdateField(int id, string strValue)
		{
			StringBuilder strSql = new StringBuilder();
            strSql.Append("update " + this.databaseprefix + "online_service set " + strValue);
			strSql.Append(" where id=" + id);
			DbHelperSQL.ExecuteSql(strSql.ToString());
		}
        public bool Update(RTBcms.Web.Plugin.OnlineService.Model.online_service model)
		{
			StringBuilder strSql = new StringBuilder();
            strSql.Append("update " + this.databaseprefix + "online_service set ");
            strSql.Append("service_template=@service_template,");
            strSql.Append("service_title=@service_title,");
			strSql.Append("sort_id=@sort_id,");
			strSql.Append("is_lock=@is_lock,");
			strSql.Append("add_time=@add_time,");
            strSql.Append("site_path=@site_path");
			strSql.Append(" where id=@id");
			SqlParameter[] parameters = new SqlParameter[]
			{
				new SqlParameter("@service_template", SqlDbType.NVarChar, 50),
				new SqlParameter("@service_title", SqlDbType.NVarChar, 50),
				new SqlParameter("@sort_id", SqlDbType.Int, 4),
				new SqlParameter("@is_lock", SqlDbType.TinyInt, 1),
				new SqlParameter("@add_time", SqlDbType.DateTime),
                new SqlParameter("@site_path", SqlDbType.NVarChar, 100),
				new SqlParameter("@id", SqlDbType.Int, 4)
			};
            parameters[0].Value = model.service_template;
            parameters[1].Value = model.service_title;
			parameters[2].Value = model.sort_id;
			parameters[3].Value = model.is_lock;
			parameters[4].Value = model.add_time;
            parameters[5].Value = model.site_path;
			parameters[6].Value = model.id;
			int rows = DbHelperSQL.ExecuteSql(strSql.ToString(), parameters);
			return rows > 0;
		}
		public bool Delete(int id)
		{
			StringBuilder strSql = new StringBuilder();
            strSql.Append("delete from " + this.databaseprefix + "online_service ");
			strSql.Append(" where id=@id");
			SqlParameter[] parameters = new SqlParameter[]
			{
				new SqlParameter("@id", SqlDbType.Int, 4)
			};
			parameters[0].Value = id;
			int rows = DbHelperSQL.ExecuteSql(strSql.ToString(), parameters);
			return rows > 0;
		}
        public RTBcms.Web.Plugin.OnlineService.Model.online_service GetModel(int id)
		{
			StringBuilder strSql = new StringBuilder();
            strSql.Append("select  top 1 id,service_template,service_title,sort_id,is_lock,add_time,site_path from " + this.databaseprefix + "online_service ");
			strSql.Append(" where id=@id");
			SqlParameter[] parameters = new SqlParameter[]
			{
				new SqlParameter("@id", SqlDbType.Int, 4)
			};
			parameters[0].Value = id;
            RTBcms.Web.Plugin.OnlineService.Model.online_service model = new RTBcms.Web.Plugin.OnlineService.Model.online_service();
			DataSet ds = DbHelperSQL.Query(strSql.ToString(), parameters);
            RTBcms.Web.Plugin.OnlineService.Model.online_service result;
			if (ds.Tables[0].Rows.Count > 0)
			{
				if (ds.Tables[0].Rows[0]["id"] != null && ds.Tables[0].Rows[0]["id"].ToString() != "")
				{
					model.id = int.Parse(ds.Tables[0].Rows[0]["id"].ToString());
				}
                if (ds.Tables[0].Rows[0]["service_template"] != null && ds.Tables[0].Rows[0]["service_template"].ToString() != "")
				{
                    model.service_template = ds.Tables[0].Rows[0]["service_template"].ToString();
				}
                if (ds.Tables[0].Rows[0]["service_title"] != null && ds.Tables[0].Rows[0]["service_title"].ToString() != "")
				{
                    model.service_title = ds.Tables[0].Rows[0]["service_title"].ToString();
				}
				if (ds.Tables[0].Rows[0]["sort_id"] != null && ds.Tables[0].Rows[0]["sort_id"].ToString() != "")
				{
					model.sort_id = int.Parse(ds.Tables[0].Rows[0]["sort_id"].ToString());
				}
				if (ds.Tables[0].Rows[0]["is_lock"] != null && ds.Tables[0].Rows[0]["is_lock"].ToString() != "")
				{
					model.is_lock = int.Parse(ds.Tables[0].Rows[0]["is_lock"].ToString());
				}
				if (ds.Tables[0].Rows[0]["add_time"] != null && ds.Tables[0].Rows[0]["add_time"].ToString() != "")
				{
					model.add_time = DateTime.Parse(ds.Tables[0].Rows[0]["add_time"].ToString());
				}
                if (ds.Tables[0].Rows[0]["site_path"] != null && ds.Tables[0].Rows[0]["site_path"].ToString() != "")
                {
                    model.site_path = ds.Tables[0].Rows[0]["site_path"].ToString();
                }
				result = model;
			}
			else
			{
				result = null;
			}
			return result;
		}
		public DataSet GetList(string strWhere)
		{
			StringBuilder strSql = new StringBuilder();
            strSql.Append("select id,service_template,service_title,sort_id,is_lock,add_time,site_path ");
            strSql.Append(" FROM " + this.databaseprefix + "online_service ");
			if (strWhere.Trim() != "")
			{
				strSql.Append(" where " + strWhere);
			}
			return DbHelperSQL.Query(strSql.ToString());
		}
		public DataSet GetList(int Top, string strWhere)
		{
			StringBuilder strSql = new StringBuilder();
			strSql.Append("select ");
			if (Top > 0)
			{
				strSql.Append(" top " + Top.ToString());
			}
            strSql.Append(" id,service_template,service_title,sort_id,is_lock,add_time,site_path ");
            strSql.Append(" FROM " + this.databaseprefix + "online_service ");
			if (strWhere.Trim() != "")
			{
				strSql.Append(" where " + strWhere);
			}
			strSql.Append(" order by sort_id asc,add_time desc");
			return DbHelperSQL.Query(strSql.ToString());
		}
		public DataSet GetList(int pageSize, int pageIndex, string strWhere, string filedOrder, out int recordCount)
		{
			StringBuilder strSql = new StringBuilder();
            strSql.Append("select * FROM " + this.databaseprefix + "online_service");
			if (strWhere.Trim() != "")
			{
				strSql.Append(" where " + strWhere);
			}
			recordCount = Convert.ToInt32(DbHelperSQL.GetSingle(PagingHelper.CreateCountingSql(strSql.ToString())));
			return DbHelperSQL.Query(PagingHelper.CreatePagingSql(recordCount, pageSize, pageIndex, strSql.ToString(), filedOrder));
		}
	}
}
